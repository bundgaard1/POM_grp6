class Motor_21

instance variables
    public mtr_torque : real;
    public last_time : real;
    public friction_torque : real;
    public torque : real;
    public gravity_torque : real;

    public motor_failed : bool;

    public state_history : seq of (real * real); -- time * torque

values
    I : real = 0.1;
    m : real = 0.1;
    g : real = 9.82;
    r : real = 1; -- 1 meter

operations
    public Motor_21: () ==> Motor_21
    Motor_21() == (
        motor_failed := false;
        mtr_torque := 0;
        last_time := 0;
        friction_torque := 0;
        torque := 0;
        gravity_torque := 0;
        state_history := [];
    );
    
    public step: () ==> ()
    step() == duration(0)(
        dcl q_acc : real;
        dcl q_vel : real;
        dcl prev_angle_vel : real;
        dcl prev_angle : real;
        dcl new_angle : real;
        dcl dt : real;

        dt := time/1E9 - last_time;
        last_time := time/1E9;

        prev_angle := System_21`env.getArmAngle();

        q_acc := torque / I;
        prev_angle_vel := System_21`env.getArmVel();
        
        q_vel := prev_angle_vel + q_acc * dt;

        new_angle := prev_angle + q_vel * dt;
        
        System_21`env.adjustArmAngle(new_angle - prev_angle);

        state_history := state_history ^ [mk_(time/1E9, torque)];
    );

    public setTorque: (real) ==> ()
    setTorque(givenTorque) == duration(0)(

        if motor_failed then (
            torque := 0;
            return;
        );

        torque := givenTorque;
    );

thread
    periodic(2E7,0,0,0)(step);

end Motor_21